/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ads.poo;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

public class App {

    private HashMap<String, Aluno> bancoDeDados;

    public App(){
        this.bancoDeDados = new HashMap<>();
    }

    private int menu(){
        int opcao = 0;
        System.out.println(".: SIGAA :.");
        System.out.println("Bem vindo ao Sistema!\nInsira o numero correspondente à sua escolha");
        System.out.println("1 - Cadastrar");
        System.out.println("2 - Editar");
        System.out.println("3 - Excluir");
        System.out.println("4 - Listar dados de um aluno");
        System.out.println("5 - Listar todos os alunos");
        System.out.println("6 - Sair");
        Scanner teclado = new Scanner(System.in);
        opcao = teclado.nextInt();
        teclado.nextLine();
        return opcao;
    }

    private boolean cadastrar(){
        Scanner teclado = new Scanner(System.in);
        System.out.println("Insira o Nome");
        String nome = teclado.nextLine();

        String matricula;
        do {
            System.out.println("Insira a Matrícula");
            matricula = teclado.nextLine();
            if (this.bancoDeDados.containsKey(matricula)){
                System.out.println("Matricula já existente, tente novamente");
            }
        }while(this.bancoDeDados.containsKey(matricula));


        System.out.println("Insira o Curso");
        String curso = teclado.nextLine();

        System.out.println("Insira o Telefone");
        String telefone = teclado.nextLine();

        System.out.println("Email");
        String email = teclado.nextLine();

        System.out.println("Insira a Data");
        String dataString = teclado.nextLine();
        DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate data = LocalDate.parse(dataString, formato);

        if (!this.bancoDeDados.containsKey(matricula)) {
            this.bancoDeDados.put(matricula,new Aluno(nome, matricula, curso, telefone, email, data));
            return true;
        }
        return false;
    }

    private boolean editarAluno(){
        Scanner teclado = new Scanner(System.in);
        String matricula = teclado.nextLine();
        do{
            System.out.println("Insira a matricula do aluno a ser editado");
            matricula = teclado.nextLine();
            if (!this.bancoDeDados.containsKey(matricula)){
                System.out.println("Matricula não existente, tente novamente");
            }
        } while (!this.bancoDeDados.containsKey(matricula));

        int opcao = 0;
        System.out.println("Insira o número do dado que deseja alterar");
        System.out.println("1 - Nome");
        System.out.println("2 - Matrícula");
        System.out.println("3 - Curso");
        System.out.println("4 - Telefone");
        System.out.println("5 - Email");
        System.out.println("6 - Data de Nascimento");
        System.out.println("7 - cancelar");

        opcao = teclado.nextInt();
        teclado.nextLine();
        
        Aluno aluno = this.bancoDeDados.get(matricula);

        switch (opcao){
            case 1 -> {
                System.out.println("insira o novo nome:");
                String novoNome = teclado.nextLine();
                aluno.setNome(novoNome);
                System.out.println("Nome Editado");
            }
            case 2 -> {
                String novaMatricula;
                do {
                    System.out.println("Insira a Matrícula");
                    novaMatricula = teclado.nextLine();
                    if (this.bancoDeDados.containsKey(novaMatricula)){
                        System.out.println("Matricula já existente, tente novamente");
                    }

                }while(this.bancoDeDados.containsKey(novaMatricula));
                aluno.setMatricula(novaMatricula);
                matricula = novaMatricula;
                System.out.println("Matricula Editada");
                return true;
            }
            case 3 -> {
                System.out.println("insira o novo curso:");
                String novoCurso = teclado.nextLine();
                aluno.setCurso(novoCurso);
                System.out.println("Curso Editado");
                return true;
            }
            case 4 -> {
                System.out.println("insira o novo telefone:");
                String novoTelefone = teclado.nextLine();
                aluno.setTelefone(novoTelefone);
                System.out.println("Telefone Editado");
                return true;
            }
            case 5 -> {
                System.out.println("insira o novo email:");
                String novoEmail = teclado.nextLine();
                aluno.setEmail(novoEmail);
                System.out.println("Email Editado");
                return true;

            }
            case 6 -> {
                System.out.println("insira a nova data de nascimento:");
                LocalDate novaData = LocalDate.parse(teclado.nextLine());
                aluno.setDataNascimento(novaData);
                System.out.println("Data Editada");
                return true;

            }
            case 7 -> {
                return false;
            }
            default -> System.out.println("Número inválido");
        }
        return false;
    }

    private String listarAluno(){
        Scanner teclado = new Scanner(System.in);
        String matricula;
        do{
            System.out.println("Insira a matricula do aluno a ser pesquisado");
            matricula = teclado.nextLine();
            if (!this.bancoDeDados.containsKey(matricula)){
                System.out.println("Matricula não existente, tente novamente");
            }
        } while (!this.bancoDeDados.containsKey(matricula));
        return this.bancoDeDados.get(matricula).toString();
    }

    private boolean excluirAluno(){
        Scanner teclado = new Scanner(System.in);
        String matricula;
        do{
            System.out.println("Insira a matricula do aluno a ser excluido");
            matricula = teclado.nextLine();
            if (!this.bancoDeDados.containsKey(matricula)){
                System.out.println("Matricula não existente, tente novamente");
            }
        } while (!this.bancoDeDados.containsKey(matricula));
        this.bancoDeDados.remove(matricula);
        return true;
    }
    private String listarTodos(){
        return bancoDeDados.toString();
    }
    public static void main(String[] args) {

        App app = new App();
        int opcao;
        do {
            opcao = app.menu();
            switch (opcao){
                case 1 -> {
                    if (!app.cadastrar()) {
                        System.out.println("Erro no cadastro");
                    } else {
                        System.out.println("Usuário Cadastrado");
                    }
                }
                case 2 -> {
                    if (app.editarAluno()) {
                        System.out.println("");
                    }
                    ;
                }
               case 3 -> {
                    if (app.excluirAluno()){
                        System.out.println("Aluno Excluído");
                    }
               }
                case 4 -> System.out.println(app.listarAluno());
                case 5 -> System.out.println(app.listarTodos());
                default -> System.out.println("Opção Inválida");
            }
        } while (opcao!=6);


    }
}
